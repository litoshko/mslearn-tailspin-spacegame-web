trigger:
- '*'

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '6.x'
  branchTrimmed: $(split(variables['Build.SourceBranch'], '/')[2])
  variableItself: $(variables['Build.SourceBranch'])
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')

steps:

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo Variable itself: $variableItself
      echo Branch trimmed: $branchTrimmed
      echo Build SourceBranch: $(Build.SourceBranch)
      echo Is main: $(isMain)

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: echo $(branchTrimmed)

# - task: UseDotNet@2
#   displayName: 'Use .NET SDK $(dotnetSdkVersion)'
#   inputs:
#     version: '$(dotnetSdkVersion)'

# - task: Npm@1
#   displayName: 'Run npm install'
#   inputs:
#     verbose: false

# - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
#   displayName: 'Compile Sass assets'

# - task: gulp@1
#   displayName: 'Run gulp tasks'

# - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
#   displayName: 'Write build info'
#   workingDirectory: $(wwwrootDir)

# - task: DotNetCoreCLI@2
#   displayName: 'Restore project dependencies'
#   inputs:
#     command: 'restore'
#     projects: '**/*.csproj'

# - template: templates/build.yml
#   parameters:
#     buildConfiguration: 'Debug'

# - template: templates/build.yml
#   parameters:
#     buildConfiguration: 'Release'

# - task: PublishBuildArtifacts@1
#   displayName: 'Publish Artifact: drop'
#   condition: succeeded()